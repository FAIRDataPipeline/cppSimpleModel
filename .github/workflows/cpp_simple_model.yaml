name: cppSimpleModel

on: [push]

jobs:
  Build_Ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with: 
          python-version: "3.9"
          architecture: "x64"
      - name: Install graphviz
        run:  |
              sudo apt-get install graphviz
              sudo apt-get install -y gnuplot
      - name: Install local registry
        run: curl -fsSL https://data.scrc.uk/static/localregistry.sh | /bin/bash -s -- -b main
      - name: Checkout FAIRDataPipeline/FAIR-CLI
        uses: actions/checkout@v2
        with:
          repository: FAIRDataPipeline/FAIR-CLI
          path: FAIR-CLI
      - name: Move FAIR-CLI
        run: mv FAIR-CLI ../FAIR-CLI
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install and initialise FAIR CLI
        run: |
          cd ../FAIR-CLI
          poetry install
          source .venv/bin/activate
          cd ${{ github.workspace }}
          fair init --ci
          fair registry start
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y lcov libjsoncpp-dev curl libcurl4-openssl-dev libyaml-cpp-dev libhdf5-dev
      - name: Configure Library
        run: |
          cmake -Bbuild
      - name: Run model
        run: |
          cmake --build build
          cd ../FAIR-CLI
          poetry install
          source .venv/bin/activate
          cd ${{ github.workspace }}
          fair init --ci
          fair pull data\seirs_config.yaml
          fair run data\seirs_config.yaml
  Build_MacOS:
    name: Build MacOS
    runs-on: macOS-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          brew install cmake
          brew install hdf5
          brew install curl
          brew install gnuplot
      - name: Configure Library
        run: |
          cmake -Bbuild
      - name: Build Library
        run: |
          cmake --build build
  Build_Windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install Dependencies
        run: |
          choco install gnuplot
          choco install wget
          wget -O hdf5.zip https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/bin/windows/hdf5-1.12.1-Std-win10_64-vs14.zip
          tar -xf hdf5.zip
          cd hdf
          msiexec /i HDF5-1.12.1-win64.msi /quiet /qn /norestart /log log.log INSTALL_ROOT="$Env:RUNNER_TEMP\HDF5_ROOT" | Out-Null
          gc log.log
      - name: Configure Library
        run: |
          cmake -Bbuild
        env: 
          HDF5_ROOT: ${{ runner.temp }}\HDF5_ROOT
      - name: Compile FDP-Cpp-API
        run: cmake --build build --config=Release
        env: 
          HDF5_ROOT: ${{ runner.temp }}\HDF5_ROOT